const crypto = require('crypto');

const hashedData = "6e01e505290071c3c8688048c2baab27ece22319afef9968e2e0e0bd8a14557a8531e598fdc229a723441cfdeb66fe23cda1b510cb1ac20cbb6981b5052b2a2ceb0550f1063a61c508730c47651dca3f5880297c2f04096bf9af0c6245c48426068ac13ebbe788a629277303521acd395c252c8a4edb0356815211c410f1d4dda025432290ac4e3779aec79e260d5f2c5e6b3131a82b801b8645c3e89eb864081f70c744f906ffe5f4b3006ce3887c961cbe6f0e4c730f902d0ed85971cbe752ee312199302ab1e5beaf6772eb1c81f7d2a3b32d2afc69dbbc8bf0a7c44d0fb8bc7e6588fc8c5fd214f5d0d69a5a311278668c98e2db335c94cb28605045919f72b5161aadca78ac1c9f7658cf813135e9e11e0e8174e7c35014a3be36baff3d9f7eeb457889185c18438a058a8e5d945adb5a5e6fe7a866c06517ce1c1d8b4530728e13a3cde1921d7cbd0b1ade12f9676a0c9f99f168901b23591a783f9ddef4eeb84ab492c2be6df7bcba30f108a8ac28c465ab95caa86fa1a86000f92407fc0ff2d293b0d472f9e412142765024228dd46b23f29eac47bcd9d5182fce31d6e18c2470ba2facecb14c4022b4d5e094d760c70b6e01fcbfe39d3bd3ea8192043893d06250023b0ddf5c6befbc9963a0a8e3d03291cdac3f6dbee2c886dc03c2dbf2f41fb35ec025ec7c5a7890166f067455bf23f2b64a163f0744bcf0c4314cc8c619be5ae39d39eae4965b30fc732e53ce737906252f26f5ebd1852fbe6ee06355a324cb4a618f60dc39886d9c8e3f40b078be5c1fe4cf54b3ad5ed3117b44835e4ca76c06a5b9623e4925ebb49f6f1155dd2448a6cb974f186e816b85ea6e4c705d6e31b0a03e751c71155f6720d1023ab974f04c68a3a84c902c811897ed74ed0b659f1a70597dcf37d99e775fcc40a8948870a03ecfff6d35006efadb141063af13fe161788e9e98561eb512fb1c18d493e5e67f6d946611137409246fab54f22ce0c44d1cd4a0b66506d52fd697d57648aba5d6b5c882780d56fb1c2f17d0eb0ca25cdfda96f43212365bc4238e78b1e345271e6d0f86b3d474144548f71899dbba2d0d27fc91899d7aff53f2b73670f2567294c298ba03a468109c806fa7a45ef7204a117b9fad97bbd3adb224fcf1e01be66f648cb854daab3865cd07a2b596c881c2146c74d34082ae14486e3734ebaeb85411da12f2062dc56181676374dbd13eb17f1e92f9bbe5e48661f6c387a94bda404b8fc9b75cc038d6b0"
const iv = "09da63cab8ff26c25b6055a95358d8bd"

function decryptHashedValues(encryptedData, iv, key) {
  const algorithm = "aes-256-cbc";
  const decipher = crypto.createDecipheriv(algorithm, Buffer.from(key), Buffer.from(iv, 'hex'));
  let decryptedData = decipher.update(encryptedData, "hex", "utf8");
  decryptedData += decipher.final("utf8");
  return JSON.parse(decryptedData);
}

// function deriveKey(password, salt, iterations, keylen) {
//   return crypto.pbkdf2Sync(password, salt, iterations, keylen, 'sha256');
// }

// const key = deriveKey('juan_rocks_123', 'salt', 100000, 32); // Adjust salt and iterations as needed
// console.log('Derived key:', key.toString('hex'));
// const decryptedValues = decryptHashedValues(encryptedData=hashedData, iv, key);
// console.log("Decrypted Values:", decryptedValues);

module.exports = {hashedData, iv, decryptHashedValues};